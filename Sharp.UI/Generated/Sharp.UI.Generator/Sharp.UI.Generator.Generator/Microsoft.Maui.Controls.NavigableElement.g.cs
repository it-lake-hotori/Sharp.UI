//
// <auto-generated>
//

#pragma warning disable CS8669


namespace Sharp.UI
{
    public static class NavigableElementGeneratedExtension
    {
        public static T Style<T>(this T obj,
            Microsoft.Maui.Controls.Style style)
            where T : Sharp.UI.INavigableElement
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.NavigableElement>(obj);
            mauiObject.Style = (Microsoft.Maui.Controls.Style)style;
            return obj;
        }
        
        public static T Style<T>(this T obj,
            System.Func<ValueBuilder<Microsoft.Maui.Controls.Style>, ValueBuilder<Microsoft.Maui.Controls.Style>> buildValue)
            where T : Sharp.UI.INavigableElement
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.NavigableElement>(obj);
            var builder = buildValue(new ValueBuilder<Microsoft.Maui.Controls.Style>());
            if (builder.ValueIsSet()) mauiObject.Style = builder.GetValue();
            return obj;
        }
        
        public static T Style<T>(this T obj,
            System.Func<LazyValueBuilder<Microsoft.Maui.Controls.Style>, LazyValueBuilder<Microsoft.Maui.Controls.Style>> buildValue)
            where T : Sharp.UI.INavigableElement
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.NavigableElement>(obj);
            var builder = buildValue(new LazyValueBuilder<Microsoft.Maui.Controls.Style>());
            if (builder.ValueIsSet()) mauiObject.Style = builder.GetValue();
            return obj;
        }
        
        public static T Style<T>(this T obj,
            System.Func<BindingBuilder<Microsoft.Maui.Controls.Style>, BindingBuilder<Microsoft.Maui.Controls.Style>> buildBinding)
            where T : Sharp.UI.INavigableElement
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.NavigableElement>(obj);
            var builder = buildBinding(new BindingBuilder<Microsoft.Maui.Controls.Style>(mauiObject, Microsoft.Maui.Controls.NavigableElement.StyleProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T StyleClass<T>(this T obj,
            System.Collections.Generic.IList<string> styleClass)
            where T : Sharp.UI.INavigableElement
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.NavigableElement>(obj);
            mauiObject.StyleClass = (System.Collections.Generic.IList<string>)styleClass;
            return obj;
        }
        
        public static T StyleClass<T>(this T obj,
            System.Func<ValueBuilder<System.Collections.Generic.IList<string>>, ValueBuilder<System.Collections.Generic.IList<string>>> buildValue)
            where T : Sharp.UI.INavigableElement
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.NavigableElement>(obj);
            var builder = buildValue(new ValueBuilder<System.Collections.Generic.IList<string>>());
            if (builder.ValueIsSet()) mauiObject.StyleClass = builder.GetValue();
            return obj;
        }
        
        public static T StyleClass<T>(this T obj,
            System.Func<LazyValueBuilder<System.Collections.Generic.IList<string>>, LazyValueBuilder<System.Collections.Generic.IList<string>>> buildValue)
            where T : Sharp.UI.INavigableElement
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.NavigableElement>(obj);
            var builder = buildValue(new LazyValueBuilder<System.Collections.Generic.IList<string>>());
            if (builder.ValueIsSet()) mauiObject.StyleClass = builder.GetValue();
            return obj;
        }
        
        public static T @class<T>(this T obj,
            System.Collections.Generic.IList<string> @class)
            where T : Sharp.UI.INavigableElement
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.NavigableElement>(obj);
            mauiObject.@class = (System.Collections.Generic.IList<string>)@class;
            return obj;
        }
        
        public static T @class<T>(this T obj,
            System.Func<ValueBuilder<System.Collections.Generic.IList<string>>, ValueBuilder<System.Collections.Generic.IList<string>>> buildValue)
            where T : Sharp.UI.INavigableElement
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.NavigableElement>(obj);
            var builder = buildValue(new ValueBuilder<System.Collections.Generic.IList<string>>());
            if (builder.ValueIsSet()) mauiObject.@class = builder.GetValue();
            return obj;
        }
        
        public static T @class<T>(this T obj,
            System.Func<LazyValueBuilder<System.Collections.Generic.IList<string>>, LazyValueBuilder<System.Collections.Generic.IList<string>>> buildValue)
            where T : Sharp.UI.INavigableElement
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.NavigableElement>(obj);
            var builder = buildValue(new LazyValueBuilder<System.Collections.Generic.IList<string>>());
            if (builder.ValueIsSet()) mauiObject.@class = builder.GetValue();
            return obj;
        }
        
    }
}


#pragma warning restore CS8669
