//
// <auto-generated>
//

#pragma warning disable CS8669


using System.Collections;
using System.Collections.ObjectModel;


namespace Sharp.UI
{  
    /// <summary>
    /// A <c>Sharp.UI</c> class inheriting from the <c>Microsoft.Maui.Controls.VisualStateGroup</c> class.
    /// </summary>
    public partial class VisualStateGroup : Microsoft.Maui.Controls.VisualStateGroup, Sharp.UI.IVisualStateGroup, IMauiWrapper, IList<Microsoft.Maui.Controls.VisualState>
    {
        // ----- maui object -----

        public Sharp.UI.VisualStateGroup MauiObject { get => this; }

        // ----- constructors -----

        public VisualStateGroup() { }

        public VisualStateGroup(out VisualStateGroup visualStateGroup) 
        {
            visualStateGroup = this;
        }

        public VisualStateGroup(System.Action<VisualStateGroup> configure) 
        {
            configure(this);
        }

        public VisualStateGroup(out VisualStateGroup visualStateGroup, System.Action<VisualStateGroup> configure) 
        {
            visualStateGroup = this;
            configure(this);
        }

        public VisualStateGroup(string name, out VisualStateGroup visualStateGroup) : this(name)
        {
            visualStateGroup = this;
        }

        public VisualStateGroup(string name, System.Action<VisualStateGroup> configure) : this(name)
        {
            configure(this);
        }

        public VisualStateGroup(string name, out VisualStateGroup visualStateGroup, System.Action<VisualStateGroup> configure) : this(name)
        {
            visualStateGroup = this;
            configure(this);
        }

        // ----- collection container -----

        public int Count => this.States.Count;
        public Microsoft.Maui.Controls.VisualState this[int index] { get => this.States[index]; set => this.States[index] = value; }
        public bool IsReadOnly => false;
        public void Add(Microsoft.Maui.Controls.VisualState item) => this.States.Add(item);
        public void Clear() => this.States.Clear();
        public bool Contains(Microsoft.Maui.Controls.VisualState item) => this.States.Contains(item);
        public void CopyTo(Microsoft.Maui.Controls.VisualState[] array, int arrayIndex) => this.States.CopyTo(array, arrayIndex);
        public IEnumerator<Microsoft.Maui.Controls.VisualState> GetEnumerator() => this.States.GetEnumerator();
        public int IndexOf(Microsoft.Maui.Controls.VisualState item) => this.States.IndexOf(item);
        public void Insert(int index, Microsoft.Maui.Controls.VisualState item) => this.States.Insert(index, item);
        public bool Remove(Microsoft.Maui.Controls.VisualState item) => this.States.Remove(item);
        public void RemoveAt(int index) => this.States.RemoveAt(index);
        IEnumerator IEnumerable.GetEnumerator() => this.States.GetEnumerator();

        // ----- properties / events -----


    }
}

#pragma warning restore CS8669
